import requests
import json
import datetime

from config import *


def date_name(date: datetime):
    """
    –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏ –ø–æ –¥–∞—Ç–µ

    :param date:
    :return:
    """

    return ["–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫", "–í—Ç–æ—Ä–Ω–∏–∫", "–°—Ä–µ–¥–∞", "–ß–µ—Ç–≤–µ—Ä–≥", "–ü—è—Ç–Ω–∏—Ü–∞", "–°—É–±–±–æ—Ç–∞", "–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ"][date.weekday()]


def format_name(lesson: list):
    """
    –í–æ–∑—Ä–∞–≤—Ä–∞—â–∞–µ—Ç —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—É—é —Å—Ç—Ä–æ–∫—É –∏–º–µ–Ω

    :param lesson:
    :return:
    """
    names = list()
    for teacher in lesson:
        teacher_name = str()
        if "surname" in teacher:
            if teacher["surname"] is not None:
                teacher_name += teacher['surname']
        if "firstname" in teacher:
            if teacher["firstname"] is not None:
                teacher_name += " " + teacher['firstname']
        if "patronymic" in teacher:
            if teacher["patronymic"] is not None:
                teacher_name += " " + teacher['patronymic']
        names.append(teacher_name)
    return ', '.join(names)


def get_schedule(group_name: str) -> dict or None:
    """
    –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ —É —Å–µ—Ä–≤–µ—Ä–∞

    :param group_name:
    :return:
    """

    session = requests.session()
    request = session.post(f"{SERVER_URL}api/v1/schedule/group", json={"group_name": group_name}, timeout=2)
    if not request.status_code == 200:
        return None
    return request.json()


def get_teacher_schedule(teacher: dict):
    """
    –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è —É —Å–µ—Ä–≤–µ—Ä–∞

    :param teacher:
    :return:
    """
    session = requests.session()
    request = session.post(f"{SERVER_URL}api/v1/schedule/teacher",
                           json={"id": teacher['id'], "name": teacher['name']}, timeout=2)
    if not request.status_code == 200:
        return None
    return request.json()


def get_teacher(teacher_name: str) -> dict or None:
    """
    –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ —É —Å–µ—Ä–≤–µ—Ä–∞

    :param teacher_name:
    :return:
    """

    session = requests.session()
    request = session.post(f"{SERVER_URL}api/v1/teacher", json={"name": teacher_name}, timeout=2)
    if not request.status_code == 200:
        return None
    request = request.json()
    if len(request) > 0:
        return dict(id=request[0][0], name=request[0][1])
    return None


def format_schedule(group_name: str = None, start_day: int = 0, days: int = 1, teacher: dict = None) -> str or None:
    """
    –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∫ –≤–∏–¥—É –∫–æ—Ç–æ—Ä—ã–π –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –±–æ—Ç

    :param teacher:
    :param start_day:
    :param group_name:
    :param days:
    :return:
    """

    if teacher is not None:
        schedule = get_teacher_schedule(teacher)
    else:
        schedule = get_schedule(group_name)

    if schedule is None:
        return None

    date = datetime.datetime.today()
    date += datetime.timedelta(days=start_day)
    text = str()
    for _ in range(days):
        text_date = date.strftime('%d.%m.%Y')
        text += f"üìÖ {date_name(date)}, {text_date}\n"
        if text_date in schedule:
            for lesson in schedule[text_date]:
                text += f"\n‚è±{lesson['time_start']} ‚Äì {lesson['time_end']}‚è±\n"
                text += f"{lesson['name']}\n"
                if lesson['type']:
                    text += f"{lesson['type']}\n"
                if teacher is not None:
                    if len(lesson['groups'].split(', ')) > 1:
                        text += "–ì—Ä—É–ø–ø—ã: "
                    else:
                        text += "–ì—Ä—É–ø–ø—ã: "
                    text += f"{lesson['groups']}\n"
                    if lesson['audience']:
                        text += f"–ö–∞–±–∏–Ω–µ—Ç: {lesson['audience']}\n"
                    text += f"{lesson['location']}"
                if group_name is not None:
                    if lesson['audience']:
                        text += f"–ì–¥–µ: {lesson['audience']}\n"
                    teachers = format_name(lesson['teachers'])
                    if teachers:
                        text += f"–ö—Ç–æ: {teachers}"
                text += "\n"
        else:
            text += f"–ù–µ—Ç –ø–∞—Ä\n"
        text += "\n"
        date += datetime.timedelta(days=1)
    return text
